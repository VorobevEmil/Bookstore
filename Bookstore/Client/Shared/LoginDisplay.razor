@using Microsoft.AspNetCore.Components.Authorization
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication
@using System.Security.Claims
@inject NavigationManager Navigation
@inject SignOutSessionStateManager SignOutManager
@inject AuthenticationStateProvider AuthenticationStateProvider

<AuthorizeView>
    <Authorized>
        @{
            List<(string? link, string title, string icon, List<(string link, string title)>? childLinks)> authLink = new List<(string? link, string title, string icon, List<(string link, string title)>?)>()
        {
        (null, context.User.Identity!.Name!, Icons.Outlined.SentimentSatisfied, new List<(string link, string title)>()
        {
        ("authentication/profile","Личный кабинет"),
        ("user-review","Мои отзывы"),
        ("leave-review", "Оставить отзывы"),
        }),
        ("personal/order", "Заказы", Icons.Outlined.MarkunreadMailbox, null),
        ("personal/cart", "Корзина", Icons.Outlined.ShoppingCart, null),
        };

            if (context.User.Claims.Any(t => t.Value == "Admin"))
            {
                authLink[0].childLinks!.Add(new("/admin", "Панель управления"));
            }
        }
        @foreach (var link in authLink)
        {

            <li class="nav-item" style="padding:0px 10px;">
                @if (link.childLinks == null)
                {
                    <MudLink Href="@link.link" Color="Color.Default">
                        <div style="display:flex; flex-direction: column;" class="align-items-lg-center text-lg-center">
                            <MudIcon Icon="@link.icon" Color="Color.Dark" />
                            <MudText Color="Color.Dark">@link.title</MudText>
                        </div>
                    </MudLink>
                }
                else
                {

                    <MudMenu AnchorOrigin="Origin.BottomCenter" TransformOrigin="Origin.TopCenter">
                        <ActivatorContent>
                            <div style="display:flex; flex-direction: column;" class="align-items-lg-center text-lg-center">
                                <MudIcon Icon="@link.icon" Color="Color.Dark" />
                                <MudText Color="Color.Dark">@link.title</MudText>
                            </div>
                        </ActivatorContent>
                        <ChildContent>
                            @foreach (var childLink in link.childLinks)
                            {
                                <MudMenuItem>
                                    <MudLink Href="@childLink.link" Color="Color.Default"><MudText Color="Color.Dark">@childLink.title</MudText></MudLink>
                                </MudMenuItem>
                            }
                        </ChildContent>
                    </MudMenu>
                }
            </li>
        }

        <li class="nav-item" style="padding:0px 10px;">
            <MudLink Color="Color.Default" @onclick="(async() => await BeginSignOutAsync())" Style="cursor:pointer;">
                <div style="display:flex; flex-direction: column;" class="align-items-lg-center">
                    <MudIcon Icon="@Icons.Outlined.ExitToApp" Color="Color.Dark" />
                    <MudText Color="Color.Dark">Выйти</MudText>
                </div>
            </MudLink>
        </li>
    </Authorized>
    <NotAuthorized>
        @{
            List<(string link, string title, string icon)> notAuthLink = new List<(string, string, string)>()
        {
        ("authentication/login", "Войти", Icons.Outlined.Login),
        ("authentication/register", "Регистрация", Icons.Outlined.HowToReg),
        };
        }

        @foreach (var link in notAuthLink)
        {
            <li class="nav-item" style="padding:0px 10px;">
                <MudLink Href="@link.link" Color="Color.Default">
                    <div style="display:flex; flex-direction: column;" class="align-items-lg-center">
                        <MudIcon Icon="@link.icon" Color="Color.Dark" />
                        <MudText Color="Color.Dark">@link.title</MudText>
                    </div>
                </MudLink>
            </li>
        }
    </NotAuthorized>
</AuthorizeView>

@code {
    private async Task BeginSignOutAsync()
    {
        await SignOutManager.SetSignOutState();
        Navigation.NavigateTo("authentication/logout");
    }
}