@using Bookstore.Client.UIHelper

@if (Catalogs != null)
{
    <MudText Class="mt-3">@Title</MudText>
    <MudTreeView Width="300px" T="TreeItemData" Items="TreeItems" SelectedValueChanged="SetValueCallback" Dense="Dense">
        <ItemTemplate>
            <MudTreeViewItem Items="@context.TreeItems" Value="@context" Text="@context.Title" EndTextTypo="@Typo.caption" />
        </ItemTemplate>
    </MudTreeView>
}

@code {
    [Parameter]
    public string? Title { get; set; }

    [Parameter]
    public EventCallback<TreeItemData> SetValueCallback { get; set; }


    [Parameter]
    public bool Dense { get; set; }

    private HashSet<TreeItemData> TreeItems { get; set; } = new HashSet<TreeItemData>();
    public List<CatalogModel>? Catalogs { get; set; }

    [Inject]
    public IHttpClientFactory? HttpClientFactory { get; set; }
    private HttpClient? _http;
    protected override async Task OnInitializedAsync()
    {
        _http = HttpClientFactory.CreateClient("Bookstore.AnonymousAPI");

        Catalogs = await _http.GetFromJsonAsync<List<CatalogModel>>("api/Catalog/GetEntities");

        TreeItemData.SetTreeItems(Catalogs.Where(t => t.CatalogModelId == null).ToList(), TreeItems);
    }
}